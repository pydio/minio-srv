syntax = "proto3";

import "github.com/pydio/services/common/service/proto/common.proto";

package idm;

// *****************************************************************************
//  Services
// *****************************************************************************
service RoleService {
    rpc CreateRole (CreateRoleRequest) returns (CreateRoleResponse) {};
    rpc DeleteRole (DeleteRoleRequest) returns (DeleteRoleResponse) {};
    rpc SearchRole (SearchRoleRequest) returns (stream SearchRoleResponse) {};
    rpc StreamRole (stream SearchRoleRequest) returns (stream SearchRoleResponse) {};
}

// *****************************************************************************
//  Messages structure
// *****************************************************************************
message CreateRoleRequest{
    Role Role = 1;
}

message CreateRoleResponse{
    Role Role = 1;
}

message DeleteRoleRequest{
    service.Query Query = 1;
}

message DeleteRoleResponse{
    int64 RowsDeleted = 1;
}

message SearchRoleRequest{
    service.Query Query = 1;
}

message SearchRoleResponse{
    Role Role = 1;
}

message Role {
    string ID = 1;
    string Name = 2;
}

message RoleSingleQuery {
    repeated string name = 1;
    bool not = 3;
}

// *****************************************************************************
//  Services
// *****************************************************************************
service UserService {
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {};
    rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse) {};
    rpc BindUser (BindUserRequest) returns (BindUserResponse) {};
    rpc SearchUser (SearchUserRequest) returns (stream SearchUserResponse) {};
    rpc StreamUser (stream SearchUserRequest) returns (stream SearchUserResponse) {};
}

// *****************************************************************************
//  Messages structure
// *****************************************************************************
message CreateUserRequest{
    User User = 1;
}

message CreateUserResponse{
    User User = 1;
}

message BindUserRequest{
    string userName = 1;
    string password = 2;
}

message BindUserResponse{
    User User = 1;
}

message DeleteUserRequest{
    service.Query Query = 1;
}

message DeleteUserResponse{
    int64 RowsDeleted = 1;
}

message SearchUserRequest{
    service.Query Query = 1;
}

message SearchUserResponse{
    User User = 1;
}

message User {
    string ID = 1;
    string Login = 2;
    string Password = 3;
    string GroupPath = 4;
    map<string, string> Attributes = 5;
}

message UserSingleQuery {
    string login = 1;
    string password = 2;
    string groupPath = 3;
    map<string, string> attributes = 4;
    bool not = 5;
}

// *****************************************************************************
//  Services Worskpace
// *****************************************************************************
service WorkspaceService {
    rpc CreateWorkspace (CreateWorkspaceRequest) returns (CreateWorkspaceResponse) {};
    rpc DeleteWorkspace (DeleteWorkspaceRequest) returns (DeleteWorkspaceResponse) {};
    rpc SearchWorkspace (SearchWorkspaceRequest) returns (stream SearchWorkspaceResponse) {};
    rpc StreamWorkspace (stream SearchWorkspaceRequest) returns (stream SearchWorkspaceResponse) {};
}

// *****************************************************************************
//  Messages structure
// *****************************************************************************
message CreateWorkspaceRequest{
    Workspace Workspace = 1;
}

message CreateWorkspaceResponse{
    Workspace Workspace = 1;
}

message DeleteWorkspaceRequest{
    service.Query Query = 1;
}

message DeleteWorkspaceResponse{
    int64 RowsDeleted = 1;
}

message SearchWorkspaceRequest{
    service.Query Query = 1;
}

message SearchWorkspaceResponse{
    Workspace Workspace = 1;
}

message Workspace {
    string UUID = 1;
    string Label = 2;
    string Slug = 3;
    repeated string RootNodes = 4;
}

message WorkspaceSingleQuery {
    string uuid  = 1;
    string label = 2;
    string slug  = 3;
    bool not = 4;
}
