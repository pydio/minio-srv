// Code generated by protoc-gen-go. DO NOT EDIT.
// source: object.proto

/*
Package object is a generated protocol buffer package.

It is generated from these files:
	object.proto

It has these top-level messages:
	GetHttpUrlRequest
	GetHttpUrlResponse
*/
package object

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetHttpUrlRequest struct {
}

func (m *GetHttpUrlRequest) Reset()                    { *m = GetHttpUrlRequest{} }
func (m *GetHttpUrlRequest) String() string            { return proto.CompactTextString(m) }
func (*GetHttpUrlRequest) ProtoMessage()               {}
func (*GetHttpUrlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GetHttpUrlResponse struct {
	URL     string `protobuf:"bytes,1,opt,name=URL" json:"URL,omitempty"`
	Encrypt bool   `protobuf:"varint,2,opt,name=Encrypt" json:"Encrypt,omitempty"`
}

func (m *GetHttpUrlResponse) Reset()                    { *m = GetHttpUrlResponse{} }
func (m *GetHttpUrlResponse) String() string            { return proto.CompactTextString(m) }
func (*GetHttpUrlResponse) ProtoMessage()               {}
func (*GetHttpUrlResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetHttpUrlResponse) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *GetHttpUrlResponse) GetEncrypt() bool {
	if m != nil {
		return m.Encrypt
	}
	return false
}

func init() {
	proto.RegisterType((*GetHttpUrlRequest)(nil), "object.GetHttpUrlRequest")
	proto.RegisterType((*GetHttpUrlResponse)(nil), "object.GetHttpUrlResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for S3Endpoint service

type S3EndpointClient interface {
	GetHttpURL(ctx context.Context, in *GetHttpUrlRequest, opts ...client.CallOption) (*GetHttpUrlResponse, error)
}

type s3EndpointClient struct {
	c           client.Client
	serviceName string
}

func NewS3EndpointClient(serviceName string, c client.Client) S3EndpointClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "object"
	}
	return &s3EndpointClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *s3EndpointClient) GetHttpURL(ctx context.Context, in *GetHttpUrlRequest, opts ...client.CallOption) (*GetHttpUrlResponse, error) {
	req := c.c.NewRequest(c.serviceName, "S3Endpoint.GetHttpURL", in)
	out := new(GetHttpUrlResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for S3Endpoint service

type S3EndpointHandler interface {
	GetHttpURL(context.Context, *GetHttpUrlRequest, *GetHttpUrlResponse) error
}

func RegisterS3EndpointHandler(s server.Server, hdlr S3EndpointHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&S3Endpoint{hdlr}, opts...))
}

type S3Endpoint struct {
	S3EndpointHandler
}

func (h *S3Endpoint) GetHttpURL(ctx context.Context, in *GetHttpUrlRequest, out *GetHttpUrlResponse) error {
	return h.S3EndpointHandler.GetHttpURL(ctx, in, out)
}

func init() { proto.RegisterFile("object.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc9, 0x4f, 0xca, 0x4a,
	0x4d, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0x84, 0xb9, 0x04,
	0xdd, 0x53, 0x4b, 0x3c, 0x4a, 0x4a, 0x0a, 0x42, 0x8b, 0x72, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b,
	0x4b, 0x94, 0x1c, 0xb8, 0x84, 0x90, 0x05, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x04, 0xb8,
	0x98, 0x43, 0x83, 0x7c, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x40, 0x4c, 0x21, 0x09, 0x2e,
	0x76, 0xd7, 0xbc, 0xe4, 0xa2, 0xca, 0x82, 0x12, 0x09, 0x26, 0x05, 0x46, 0x0d, 0x8e, 0x20, 0x18,
	0xd7, 0x28, 0x98, 0x8b, 0x2b, 0xd8, 0xd8, 0x35, 0x2f, 0xa5, 0x20, 0x3f, 0x33, 0xaf, 0x44, 0xc8,
	0x95, 0x8b, 0x0b, 0x66, 0x5e, 0x90, 0x8f, 0x90, 0xa4, 0x1e, 0xd4, 0x25, 0x18, 0x16, 0x4b, 0x49,
	0x61, 0x93, 0x82, 0x58, 0xaf, 0xc4, 0x90, 0xc4, 0x06, 0x76, 0xba, 0x31, 0x20, 0x00, 0x00, 0xff,
	0xff, 0x9e, 0xd7, 0xb9, 0x07, 0xca, 0x00, 0x00, 0x00,
}
